name: Build & attach assets (on tag)

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    env:
      RELEASE_TAG: ${{ github.ref_name }}

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-python@v5
        with: { python-version: "3.12" }
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .
          python -m pip install pyinstaller python-semantic-release
      - name: Build (PyInstaller)
        run: |
          python -m PyInstaller "GM Assistant.spec"

      # one-file outputs: rename to versioned filenames for nicer release assets
      - name: Rename (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          set -euo pipefail
          VER="${RELEASE_TAG#v}"
          SRC="dist/GM Assistant"
          [ -f "$SRC" ] || SRC="$(find dist -maxdepth 1 -type f -print -quit)"
          cp "$SRC" "dist/GM-Assistant-${VER}-linux"
      - name: Rename (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ver = "${env:RELEASE_TAG}".TrimStart("v")
          $src = Join-Path dist 'GM Assistant.exe'
          if (-not (Test-Path $src)) { $src = (Get-ChildItem dist -Filter *.exe | Select-Object -First 1).FullName }
          Copy-Item $src ("dist/GM-Assistant-$ver-windows.exe") -Force

      - name: Publish assets to the Release
        run: semantic-release -vv publish --tag "${RELEASE_TAG}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
