"""adding tag and imagetaglink tables

Revision ID: 7726828eb595
Revises: 52501f8d626b
Create Date: 2025-09-26 11:42:46.860512

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7726828eb595'
down_revision: Union[str, Sequence[str], None] = '52501f8d626b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('color_hex', sa.Text(), nullable=True),
    sa.Column('kind', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint("(color_hex IS NULL) OR (length(color_hex) = 7 AND substr(color_hex,1,1) = '#')", name=op.f('ck_tag_ck_tag_color_hex_format')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tag')),
    sa.UniqueConstraint('name', name='uq_tag_name_cs')
    )
    op.execute("CREATE UNIQUE INDEX uq_tag_name_lower ON tag(LOWER(name));")
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.create_index('ix_tag_name', ['name'], unique=False)

    op.create_table('image_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.String(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.String(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['image_id'], ['image.id'], name=op.f('fk_image_tag_image_id_image'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name=op.f('fk_image_tag_tag_id_tag'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_image_tag')),
    sa.UniqueConstraint('image_id', 'tag_id', name='uq_image_tag_image_tag')
    )
    with op.batch_alter_table('image_tag', schema=None) as batch_op:
        batch_op.create_index('ix_image_tag_image_id', ['image_id'], unique=False)
        batch_op.create_index('ix_image_tag_tag_id', ['tag_id'], unique=False)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('image_tag', schema=None) as batch_op:
        batch_op.drop_index('ix_image_tag_tag_id')
        batch_op.drop_index('ix_image_tag_image_id')
    op.execute("DROP INDEX IF EXISTS uq_tag_name_lower;")

    op.drop_table('image_tag')
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_index('ix_tag_name')

    op.drop_table('tag')
